/*问题：技术原因有点做不动，配置环境变量一上午，进度为零，书上的方法太老，现已不兼容，网上的方法有的本身就不对，很烦。纯属浪费时间，不如自学些算法基础学科，看看电气工程，本科生科研确实需要会的人带一下，配置环境变量会者不难。
引言： 平时上课 自学 期末 数学  数据 算法 编程 局限性（技术方法 深度） 
       冒进 
主要思想： 微积分
重难点：精度优化，运行销量优化。
机器学习算法：梯度下降
下山
而这里提到的最陡的方向，其实对应的就是数学里『梯度』的概念，也就是说，其实我们无需『伸脚试探』周边的陡峭程度，而是可以通过计算损失函数的梯度，直接取得这个方向。

我们知道在1个变量的函数里，某点的斜率/导数代表其变化率最大的方向。而对于多元的情况，梯度是上面情况的一个扩展，只不过这时候的变量不再是一个，而是多个，同时我们计算得到的『梯度方向』也是一个多维的向量。大家都知道数学上计算1维/元函数『梯度/导数』的表达式如下：

df(x)dx=limh→0f(x+h)−f(x)h
df(x)dx=limh→0f(x+h)−f(x)h
对于多元的情况，这个时候我们需要求的东西扩展成每个方向的『偏导数』，然后把它们合在一块组成我们的梯度向量。
 
图1 三维梯度下降用于理解
我的想法：（现在还不太会看论文，主要是看一些书，主要是看了一些书，有了一个大概的了解，大一还要多学习，目前刚C++，微积分还要继续学，还有一些近代数学公式理解不够深入，Python的OpenCV库也很多，我也自学完了Python，也可以做，主要是机器学习的库多，可以调用的现成代代码开源而其好找，书上就有很多，但是C++效率更高，虽然要自己写一些东西 ：：我感觉现在应该没有人这么做）。
平面图像像素点属性有五个维度：X,Y,R,G,B,可以构造一个五维隐函数
N （像素点）= F( X,Y,R,G,B), 利用高维nabala算子
图像->像素点构成矩阵->可以计算的函数->场->量化表示->
核心过程：
1.对R,G,B三个参量求X,Y的偏导数，转化为聚类问题->决策变量：三组偏导Sqrt(round(R,X)+round(R,Y))，记作d1【可能后期优化的时候还要调整，待定，如用KNN可根据算法调整，一提高运行效率和准确率】
3. 经典聚类算法（需要机器学习，让机器可使用与所有有关坐标点的图像识别，不受点位颜色限制，无监督学习，简单处理部分点位，生成许多代表一定颜色取值范围的点位，{微积分：邻域思想}
4.然后用经典机器学习算法
（如randomforest）进行聚类拟合，类标签：d1，注意不要过拟合）；
或直接设置一个d1的聚类区间（这对普通笔记本来说或许是灾难性的，对内存GPU算力要求都比较高）【我不太了解水轮机制图有没有T/GB之类的标准，若有，这种方法可以大幅提高效率，相当于在输入端坐了简化，更规则，数据结构更离散，降低了聚类难度，这是现在针对工科软件的优势，但这样就只能使用于一部分曲线，不过可以分类，针对主流水轮机曲线各写一种读取的代码，每种只需更改4这一步的代码即可，更面向过程，不特意面向对象】。
 
5.确定坐标与建立坐标系
利用刚才得到的一类点就近取中值，若图像像素不够，可以用高斯算法平滑补点，加权【权重：归一化曲率SIGMOD函数】取中值位置坐标，得到中心点的坐标作为需要读取的坐标。
6.坐标系与坐标值读取
计算机务必处理部分：将图像转化为一个矩阵后，需要的坐标位置就已经量化表示了，为了将其处理输出成我们想要的数据导出到表格中，即建立（i,j） (x,U) 或（x,W）的映射，需要计算相对于矩阵中某点的距离。
坐标系三个维度：
原点：
方向：都是笛卡尔坐标系的右手系
单位长度：全自动，尤其是清晰度较高的图像，机器学习算法读取数字轻松搞定，全自动的难度在于，数字位置定位，子矩阵选择；如何让机器知道，所读取的有物理意义的数字是附近哪一个点的物理数据。
排除干扰因素后，只处理原点附近一部分坐标轴，计算P—>real的参数
Real = w*P+b0；
w: 转换系数
b0：到矩阵边缘的距离 
7.表示输出
图集一 几种常见水轮机曲线（国内外）
 
图二 常规曲线 直接读取
 
图二 主流曲线 对重合点的识别需要算法演进（史无前例，需要一定技巧）
 
图三 重合点
分析：泛化产生d1数值处理的算法，自定标签方法不在适用，只能用无监督学习，找出d1近似的一组点，直接取中心位置坐标，问题是部分点位的图像被遮挡，会产生因读取不全而产生的偏差，使精度下降。
优化措施：1.
（略）2.输出点位的同时输出拟合而成的函数

 
图四 有点有线


 
图五 线性图，利用边缘检测




有可能添加的功能：
利用Python的数据处理，直接在输出点坐标的同时，即将每一条曲线的表达式拟合出来

、针对本问题的优化：
1.	C++最接近底层，有较高效率，OpenCV有相关资源（c++写出了PS软件）。
2.	一种提高计算对硬件效率的方法：转化为黑白图像，只有一个灰度属性和XY(三维)
{单一曲线}！！！
3.	首先将原图像针对某一曲线的坐标点附近，其坐标五维属性的偏导数值相似，可以设置一个误差线作为
4.	 
5.	卷积算法提高（平滑）精读
6.	Canny边缘检测：
 1. 应用高斯滤波来平滑(模糊)图像，目的是去除噪声
 2. 计算梯度强度和方向










总结反思：1.感觉自己还是很菜，但是很想学，很想做，但是范范的学不够具体，也没有指导，实践的重要性。
      2.我觉得现在科研很简单，就是别的领域的东西调用一下（模型复用，是一种面向对象），现在研究方向很多，自己也没有想好，不如先做做学学了解一些。
     3.感兴趣的太多，越学感觉自己不会的越多，有时候还会考虑算法效率问题。
     4.还要提升：科学理想(做点自己喜欢的东西，实现价值)，现实评价标准，不太会交流。



/*-------------------------------useless---------------------------------*/
/*各种学科好像是相通的，把从混乱的图像和数据中找到一定的顾虑，进行分析和预测，以便指导生产投资或设计或过程分析，不仅仅是经济学，哲学中的客观规律， 周易中的卦，数学中的转化化归，物理中的公式定理，化学中的有机物无机物分类，元素周期表递推，生物中的蛋白结构研究，基因组测序，流体力学里对湍流的理解与应用，到一个简单的图像自动识别，总之不同学科有不同假设与学科基础，就是就前人对混乱系统已经发现的一些规律，现在就学学用吧。甚至宇宙本身就是混乱的，混沌中存在些简单规律，是大量随机偶然综合作用的结果，就像研究极值点对于理工科有极大意义，现在优化问题说白了就是找这个极值点，不求全知道，但愿会一点，留些混乱在，欣赏朦胧美。*/
